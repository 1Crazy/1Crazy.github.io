{"title":"使用RAP2模拟假数据实现前后端分离","slug":"rap2","date":"2018-08-12T02:55:07.000Z","updated":"2019-04-05T03:29:31.463Z","comments":true,"excerpt":"","content":"<h1 id=\"使用RAP2模拟假数据实现前后端分离\"><a href=\"#使用RAP2模拟假数据实现前后端分离\" class=\"headerlink\" title=\"使用RAP2模拟假数据实现前后端分离\"></a>使用RAP2模拟假数据实现前后端分离</h1><h2 id=\"为什么使用RAP2\"><a href=\"#为什么使用RAP2\" class=\"headerlink\" title=\"为什么使用RAP2\"></a>为什么使用RAP2</h2><p>&nbsp;　　在一个项目的开发中，在页面需要使用大量数据进行渲染生成前，后端开发人员的接口可能还没有写完, 当前端没有后端数据支持的情况下，我们使用<code>mock.js</code>(mock.js用于生成随机数据，拦截ajax请求)模拟假数据，实现前后端分离。开发中我们也可以使用<code>RAP2</code>(这里面生成的数据基于mock.js)在线模拟假数据。</p>\n<h2 id=\"关于RAP2的一些学习网址\"><a href=\"#关于RAP2的一些学习网址\" class=\"headerlink\" title=\"关于RAP2的一些学习网址\"></a>关于RAP2的一些学习网址</h2><blockquote>\n<p><a href=\"http://mockjs.com/\" target=\"_blank\" rel=\"noopener\">mock.js网址</a><br><br><a href=\"http://rap2.taobao.org/\" target=\"_blank\" rel=\"noopener\">RAP2网址</a><br><br><a href=\"https://github.com/thx/rap2-delos\" target=\"_blank\" rel=\"noopener\">RAP2官方文档</a><br><br><a href=\"https://github.com/nuysoft/Mock/wiki/Syntax-Specification\" target=\"_blank\" rel=\"noopener\">mock.js语法规范文档</a></p>\n</blockquote>\n<h2 id=\"与RAP2同类型的jsonplaceholder\"><a href=\"#与RAP2同类型的jsonplaceholder\" class=\"headerlink\" title=\"与RAP2同类型的jsonplaceholder\"></a>与RAP2同类型的jsonplaceholder</h2><p>&nbsp;　　jsonplaceholder也是模拟假数据，和RAP2差别是jsonplaceholder模拟出来的假数据只有固定值。</p>\n<blockquote>\n<p><a href=\"http://jsonplaceholder.typicode.com/\" target=\"_blank\" rel=\"noopener\">jsonplaceholder网址</a></p>\n</blockquote>\n<h2 id=\"RAP2使用步骤\"><a href=\"#RAP2使用步骤\" class=\"headerlink\" title=\"RAP2使用步骤\"></a>RAP2使用步骤</h2><ol>\n<li>进入RAP2网址账号注册成功以后，我们首先创建一个项目仓库，如下图所示：<br><img src=\"https://upload-images.jianshu.io/upload_images/13479263-42662d6b0c93a5af.png?imageMogr2/auto-orient/strip%7CimageView2/2/\" alt=\"pic_1\"><br><img src=\"https://upload-images.jianshu.io/upload_images/13479263-046c84f4cd106ad1.png?imageMogr2/auto-orient/strip%7CimageView2/2/\" alt=\"pic_2\"></li>\n<li>仓库建好以后，我们进入仓库，点击新建接口<br><img src=\"https://upload-images.jianshu.io/upload_images/13479263-7af801f3120012e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/\" alt=\"pic_3\"><br><img src=\"https://upload-images.jianshu.io/upload_images/13479263-a071bbd4935b0a5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/\" alt=\"pic_4\"></li>\n<li>新建接口完毕以后，我们可以看到如下图所示，我们点击商品列表，右图可以根据设置请求参数，和响应内容（点击绿色的编辑按钮），右图中还有一个地址，点击这个地址，进入以后内容如图pic_6所示<br><img src=\"https://upload-images.jianshu.io/upload_images/13479263-67bad0a59894603a.png?imageMogr2/auto-orient/strip%7CimageView2/2/\" alt=\"pic_5\"><br><img src=\"https://upload-images.jianshu.io/upload_images/13479263-8a77f08dcb46e2ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/\" alt=\"pic_6\"></li>\n<li>接下来设置请求参数和响应参数，这里以响应参数举例，点击响应内容右边的新建创建响应属性，如下图所示：<br><img src=\"https://upload-images.jianshu.io/upload_images/13479263-00358db2f1ba3387.png?imageMogr2/auto-orient/strip%7CimageView2/2/\" alt=\"pic_7\"></li>\n<li>根据所创建的数据类型不同，左侧会出现pic_8所示“+”号，点击“+”号可以向其内部添加属性，<br>图pic_8为按照填写的生成规则生成的响应数据。【<code>生成规则</code>有7中格式，关于生成规则可以查看文章开头的链接mock.js语法规范文档】，例如图pic_8中<code>data</code>属性的生成规则为9，表示生成9个元素。<code>id</code>属性的生成规则为1-9999，表示生成1-9999的随机数字。<br><img src=\"https://upload-images.jianshu.io/upload_images/13479263-678ef11e9670bce9.png?imageMogr2/auto-orient/strip%7CimageView2/2/\" alt=\"pic_8\"></li>\n<li><code>mock.js</code>文档中关于<code>mock.random</code>的方法在数据模板中称为『占位符』，书写格式为 <code>@占位符(参数 [, 参数])</code>，可以用在初始值的设置中，随机生成一段内容。<br><img src=\"https://upload-images.jianshu.io/upload_images/13479263-695f582b2939cc2a.png?imageMogr2/auto-orient/strip%7CimageView2/2/\" alt=\"pic_9\"></li>\n</ol>\n<p>转载文章请注名出处</p>\n","thumbnail":"/img/timg.jpg","categories":[],"tags":[]}